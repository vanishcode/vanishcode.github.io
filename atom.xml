<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://vanishcode.github.io</id>
    <title>vanishcode&apos;s home</title>
    <updated>2019-09-20T14:03:57.263Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://vanishcode.github.io"/>
    <link rel="self" href="https://vanishcode.github.io/atom.xml"/>
    <subtitle>上班不摸鱼</subtitle>
    <logo>https://vanishcode.github.io/images/avatar.png</logo>
    <icon>https://vanishcode.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, vanishcode&apos;s home</rights>
    <entry>
        <title type="html"><![CDATA[sf回答问题有感]]></title>
        <id>https://vanishcode.github.io/post/sf-hui-da-wen-ti-you-gan</id>
        <link href="https://vanishcode.github.io/post/sf-hui-da-wen-ti-you-gan">
        </link>
        <updated>2019-09-20T13:56:28.000Z</updated>
        <content type="html"><![CDATA[<p>草泥马的最烦问问题说不清自己要干嘛的。比如：“我antd点不了”这类不像是人说的话的。</p>
<p>真的是只想送你一句“大傻逼”。</p>
<p>难道不应该这么问吗：“我antd的form表单中使用decorator后所有按钮不能点击”。</p>
<p>你，干了什么，做了哪些操作，用的框架版本，浏览器，系统版本，框架依赖版本，啥都不说，就一句“咋不好使啊”就像让别人给你解决问题，你是一个弱智吗？<br>
话都不会说，我他妈想帮你都难。</p>
<p>最舒服的是能清晰的描述自己的需求的，并且能给出最小复现实例的比如在codepen上写个demo，这种人真的可爱。</p>
<p>周末不答题了，周一再说。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[不要随便改动macOS或MacOSX自带的python]]></title>
        <id>https://vanishcode.github.io/post/bu-yao-sui-bian-gai-dong-macos-huo-macosx-zi-dai-de-python</id>
        <link href="https://vanishcode.github.io/post/bu-yao-sui-bian-gai-dong-macos-huo-macosx-zi-dai-de-python">
        </link>
        <updated>2019-09-05T07:53:54.000Z</updated>
        <content type="html"><![CDATA[<p>mac自带python2.6和python2.7，这两个都在 <code>Python.framework</code> 中，而且里面由2.2和2.3的快捷方式，其实是指向=&gt;2.6。</p>
<p>而且vscode的<code>code .</code>命令行开启vscode其实用的是python...<br>
这个东东在<code>/Applications/Visual Studio Code.app/Contents/Resources/app/bin</code>，你会看到里面有python调用....</p>
<p>因此如果乱动乱删自带的python，其中一个问题就是不能命令行飞快地打开code了<sub>_</sub></p>
<p>当然也非常可能发生更严重的问题！比如某些系统软件从此不能打开之类的，或者自动更新中出现问题。因为mac或linux很多应用都依赖于自带的环境（不止python2哦）。</p>
<p>参考：<br>
1.https://stackoverflow.com/questions/10212270/python-asks-for-older-paths-on-mac-after-deleting-duplicate-python-installation<br>
2.https://github.com/Microsoft/vscode/issues/3790</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[工作两月，总结一哈]]></title>
        <id>https://vanishcode.github.io/post/gong-zuo-liang-yue-zong-jie-yi-ha</id>
        <link href="https://vanishcode.github.io/post/gong-zuo-liang-yue-zong-jie-yi-ha">
        </link>
        <updated>2019-09-02T07:11:05.000Z</updated>
        <content type="html"><![CDATA[<p>到今天（9月2号），差不多工作满两个月了，相对于上个月的总结，这一个月收获还是蛮多的。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[工作一个月，总结一下]]></title>
        <id>https://vanishcode.github.io/post/gong-zuo-yi-ge-yue-zong-jie-yi-xia</id>
        <link href="https://vanishcode.github.io/post/gong-zuo-yi-ge-yue-zong-jie-yi-xia">
        </link>
        <updated>2019-08-05T07:04:12.000Z</updated>
        <content type="html"><![CDATA[<p>正式参加工作一个多月了，该总结一下了。主要分为两个部分，工作上和生活上。</p>
<h3 id="工作">工作</h3>
<p>1.写代码之前一定要想好再开始写 XD，有多少接口，会出现什么错误，变量放在哪里······；</p>
<p>2.设计模式是个很重要的东西。组件怎么设计，函数怎么封装，怎样可读性更好······代码是给人看的，所以一定要写得“漂亮”，追求 <code>bug free</code> &amp; <code>code clean</code>；</p>
<p>3.不懂的不要太死扣，及时询问有经验的老员工，节省时间的同时听取经验；</p>
<p>4.技术上，具体点说：</p>
<ul>
<li>lodash 是个好东西；</li>
<li>js基础需要经常复习，主要是类型转换之类的；</li>
<li>拒绝重复操作，能封装的要封装；</li>
<li>注意多读导师的代码；</li>
<li>判断 true 还是 false 在保证一定正确的前提下尽可能短。</li>
</ul>
<h3 id="生活">生活</h3>
<p>1.下班回家娱乐时间不要太长，能学就学；</p>
<p>2.周末找机会出去，不要宅两天，最起码一天要出去；</p>
<p>3.晚上回去别吃零食了。</p>
<p><img src="https://gitee.com/vanishcode/upics/raw/master/1.jpg" alt="pic"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何跑v0.6.0早期版本的vue]]></title>
        <id>https://vanishcode.github.io/post/ru-he-pao-v060-zao-qi-ban-ben-de-vue</id>
        <link href="https://vanishcode.github.io/post/ru-he-pao-v060-zao-qi-ban-ben-de-vue">
        </link>
        <updated>2019-07-25T12:18:35.000Z</updated>
        <content type="html"><![CDATA[<p>直接访问tag在0.7.0之前的就行了 <code>releases?after=v0.7.0</code><br>
那时候还用的是grunt - _ -</p>
<p>问题：<br>
直接 <code>npm run test</code>会报错：<br>
<code>Fatal error: failed to lookup &quot;seed&quot;'s dependency &quot;component-emitter&quot;</code></p>
<p>package.json里的最好用锁死版本，把 <code>~</code> 都去掉。<br>
然后安装：<code>npm install -g component@0.16.3</code></p>
<h3 id="我之前以为这就是一个库用来引用而已其实这是一个命令行程序_">我之前以为这就是一个库用来引用而已，其实这是一个命令行程序=_=！</h3>
<p>（因为这个货实在是比较老了，7、8年前的东西，貌似最近一年只有一次更新）</p>
<p>so，自己在跑的时候直接运行：<code>grunt componentbuild:build</code></p>
<p>然后在<code>dist</code>目录里面就能找到自己编译好的<code>vue.js</code>文件啦</p>
<p>调试的时候，运行：<code>grunt watch</code></p>
<p>这时候也没问题啦~</p>
<p><img src="https://i.loli.net/2019/07/26/5d3a4ef9b3ee719585.jpg" alt=""></p>
<p>终于可以自己加一些debug语句来分析框架是怎么运行的啦~</p>
<p>有一点尴尬的是，<code>grunt test</code>命令在<code>mocha</code>那里过不去：</p>
<p><img src="https://i.loli.net/2019/07/26/5d3a4ef9c540a84540.jpg" alt=""></p>
<p>参考：<br>
1.http://t.cn/AijfP8br<br>
2.http://t.cn/AijfPWBz</p>
]]></content>
    </entry>
</feed>